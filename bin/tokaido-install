module Tokaido; end

require 'tokaido/bootstrap/piloto'
require 'fileutils'

module Tokaido::Bootstrap
  class Installer
    def load_yosemite_and_forward
      system "launchctl bootstrap system #{@pilot.firewall_destination}"
      system "launchctl enable system/com.tokaido.firewall"
      system "launchctl kickstart -k system/com.tokaido.firewall"
    end

    def load_before_yosemites
      system "launchctl load -Fw #{@pilot.firewall_destination}"
    end
  end

  class HeaderFileChecker
    def symlink_os_x_10_10
      system "ln -sf #{Paths.header_path_for('iconv', '10_10', 'iconv.h')} /usr/include/iconv.h"
      system "ln -sf #{Paths.header_path_for('iconv', '10_10', 'libcharset.h')} /usr/include/libcharset.h"
      system "ln -sf #{Paths.header_path_for('iconv', '10_10', 'localcharset.h')} /usr/include/localcharset.h"
    end

    def symlink_os_x_10_9
      system "ln -sf #{Paths.header_path_for('iconv', '10_9', 'iconv.h')} /usr/include/iconv.h"
      system "ln -sf #{Paths.header_path_for('iconv', '10_9', 'libcharset.h')} /usr/include/libcharset.h"
      system "ln -sf #{Paths.header_path_for('iconv', '10_9', 'localcharset.h')} /usr/include/localcharset.h"
    end

    def symlink_os_x_10_8
      system "ln -sf #{Paths.header_path_for('iconv', '10_8', 'iconv.h')} /usr/include/iconv.h"
      system "ln -sf #{Paths.header_path_for('iconv', '10_8', 'libcharset.h')} /usr/include/libcharset.h"
      system "ln -sf #{Paths.header_path_for('iconv', '10_8', 'localcharset.h')} /usr/include/localcharset.h"
    end

    def symlink_os_x_generic
      system "ln -sf #{Paths.header_path_for('iconv', '', 'iconv.h')} /usr/include/iconv.h"
      system "ln -sf #{Paths.header_path_for('iconv', '', 'libcharset.h')} /usr/include/libcharset.h"
      system "ln -sf #{Paths.header_path_for('iconv', '', 'localcharset.h')} /usr/include/localcharset.h"
    end

    def perform_symlinks(major, minor, tiny)
      begin
        self.send "symlink_os_x_#{[major, minor].join("_")}".to_sym
      rescue
        symlink_os_x_generic
      end
    end
  end
end

module Tokaido::Bootstrap
  class HeaderFileChecker
    def ready(pilot)
      @pilot = pilot
      @pilot.start
    end
  end

  class Installer
    def ready(pilot)
      @pilot = pilot
      @pilot.start
    end

    def write_resolver
      FileUtils.mkdir_p("/etc/resolver")
  
      path, content = @pilot.resolver_content

      File.open(path, "w") do |file|
        file.puts content
      end
    end

    def copy_firewall_rules
      FileUtils.cp @pilot.firewall_source, @pilot.firewall_destination
    end

    def done
      HeaderFileEnsurancesPiloto.new(HeaderFileChecker.new)      
    end
  end
end

module Tokaido::Bootstrap
  InstallerPiloto.new(Installer.new).load_jobs
end

# vim: set filetype=ruby
